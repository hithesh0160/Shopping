name: Notify Telegram Test Results (Docker)

on:
  schedule:
    - cron: "0 * * * *"

  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      custom_message:
        description: "Send a custom Telegram message"
        required: false
        default: ""

jobs:
  notify:
    runs-on: ubuntu-22.04

    env:
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t selenium-tests -f shop/Dockerfile shop

      - name: Run tests inside Docker and save mvn_output.log
        run: |
          mkdir -p ./shop
          docker run --rm \
            -v ${{ github.workspace }}/shop:/workspace/shop \
            selenium-tests \
            sh -c "cd /workspace/shop && mvn clean test -Dstyle.color=never -Dsurefire.printSummary=true -Dsurefire.useFile=false | tee mvn_output.log" || true

      - name: Extract Product Details section
        id: extract_section
        run: |
          if grep -q "Product Details:" ./shop/mvn_output.log; then
            sed -n '/Product Details:/,/^\[INFO\] Tests run:/p' ./shop/mvn_output.log \
              | sed '$d' > ./shop/product_details.log
            echo "section_exists=true" >> $GITHUB_OUTPUT
          else
            echo "section_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Download previous product_details.log
        uses: actions/download-artifact@v4
        with:
          name: product-details-log
          path: ./shop/previous
        continue-on-error: true

      - name: Upload product_details.log for next run
        if: steps.extract_section.outputs.section_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: product-details-log
          path: ./shop/product_details.log
          retention-days: 3

      - name: Compile Telegram Notifier
        run: |
          mkdir -p build
          javac -d build shop/src/main/java/com/instamart/utils/SendTelegramMessage.java

      - name: Run Telegram Notifier
        if: steps.extract_section.outputs.section_exists == 'true'
        run: |
          java -cp build com.instamart.utils.SendTelegramMessage

      - name: Send custom Telegram message (manual trigger)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.custom_message != ''
        run: |
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
            -d chat_id=${TELEGRAM_CHAT_ID} \
            --data-urlencode text="${{ github.event.inputs.custom_message }}"
