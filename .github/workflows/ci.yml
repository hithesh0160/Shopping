name: Shopping Maven CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven and capture output
        id: build_step
        run: |
          mvn -B clean install | tee build_output.txt

      - name: Read and prepare build output
        id: read_output
        run: |
          TRUNCATED_OUTPUT=$(tail -n 20 build_output.txt | sed 's/`/\\`/g')
          echo "BUILD_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$TRUNCATED_OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send Telegram Message on Success
        if: ${{ success() }}
        run: |
          MESSAGE=$(cat <<EOF ✅ *Build Success* for \`${{ github.repository }}\`!🔗 [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})📝 Output (last 20 lines):\`\`\`${{ env.BUILD_OUTPUT }}\`\`\`EOF)
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            --data-urlencode chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            --data-urlencode text="$MESSAGE" \
            -d parse_mode=Markdown

      - name: Send Telegram Message on Failure
        if: ${{ failure() }}
        run: |
          MESSAGE=$(cat <<EOF❌ *Build Failed* for \`${{ github.repository }}\`!🔗 [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})📝 Output (last 20 lines):\`\`\`${{ env.BUILD_OUTPUT }}\`\`\`EOF)
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            --data-urlencode chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            --data-urlencode text="$MESSAGE" \
            -d parse_mode=Markdown
