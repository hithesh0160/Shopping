name: Notify Telegram Test Results

on:
  schedule:
    - cron: "0 8,10,12,14,16,18,20,21 * * *"
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      custom_message:
        description: "Send a custom Telegram message"
        required: false
        default: ""

jobs:
  notify:
    runs-on: ubuntu-22.04

    env:
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and run tests
        run: |
          cd shop
          mvn clean test -Dsurefire.printSummary=true -Dsurefire.useFile=false | tee mvn_output.log

      - name: Extract each Product Details section
        id: extract_sections
        run: |
          cd shop
          rm -f product_details_*.log
          COUNT=0
          # Loop through each "Product Details:" occurrence
          grep -n "Product Details:" mvn_output.log | cut -d: -f1 | while read -r START; do
            END=$(tail -n +$START mvn_output.log | grep -n "^\[INFO\] Tests run:" | head -n1 | cut -d: -f1)
            if [ -n "$END" ]; then
              END=$((START + END - 2))
              sed -n "${START},${END}p" mvn_output.log > "product_details_${COUNT}.log"
              COUNT=$((COUNT + 1))
            fi
          done
          echo "count=$COUNT" >> $GITHUB_OUTPUT

      - name: Send Product Details to Telegram
        if: steps.extract_sections.outputs.count != '0'
        run: |
          cd shop
          MAX_LEN=4000
          for FILE in product_details_*.log; do
            CONTENT=$(cat "$FILE")
            while [ ${#CONTENT} -gt 0 ]; do
              PART="${CONTENT:0:$MAX_LEN}"
              curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
                -d chat_id=${TELEGRAM_CHAT_ID} \
                --data-urlencode text="$PART" \
                -d parse_mode="Markdown"
              CONTENT="${CONTENT:$MAX_LEN}"
            done
          done

      - name: Send custom Telegram message (manual trigger)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.custom_message != ''
        run: |
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
            -d chat_id=${TELEGRAM_CHAT_ID} \
            --data-urlencode text="${{ github.event.inputs.custom_message }}" \
            -d parse_mode="Markdown"
